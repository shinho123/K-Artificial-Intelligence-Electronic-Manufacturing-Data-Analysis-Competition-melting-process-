{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "381da066",
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import eli5\n",
    "import seaborn as sns\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 151,
   "id": "7c828f2e",
   "metadata": {},
   "outputs": [],
   "source": [
    "from datetime import datetime\n",
    "from sklearn import preprocessing\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.metrics import *\n",
    "from imblearn.over_sampling import SMOTE\n",
    "from eli5.sklearn import PermutationImportance\n",
    "from keras.models import Sequential\n",
    "from keras.layers import Dense, LSTM\n",
    "from keras.preprocessing import sequence\n",
    "from keras.utils import np_utils\n",
    "from keras.callbacks import EarlyStopping, ModelCheckpoint\n",
    "from sklearn.metrics import accuracy_score # 정확도 함수\n",
    "from sklearn.svm import SVC\n",
    "from sklearn.inspection import permutation_importance\n",
    "from lightgbm import LGBMClassifier, plot_importance"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "2dd31844",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'C:\\\\Users\\\\shk97\\\\전자제조데이터 분석'"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "os.getcwd() # 현재 위치 확인"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "a67fd8b9",
   "metadata": {},
   "outputs": [],
   "source": [
    "path = os.getcwd() # 현재 위치를 path 변수에 저장\n",
    "os.chdir(path) # 현재 위치 변경"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "id": "4cd4b0eb",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(\"tank.csv\", encoding = 'cp949') # melting_tank 파일 불러오기"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "id": "d99b47a8",
   "metadata": {},
   "outputs": [],
   "source": [
    "encoder =  preprocessing.LabelEncoder() \n",
    "df['TAG'] = encoder.fit_transform(df['TAG'])\n",
    "df['TAG'] = df['TAG'].astype('float32')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7194b44d",
   "metadata": {},
   "source": [
    "# 변수 선택"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "id": "26fb466b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>MELT_TEMP</th>\n",
       "      <th>MOTORSPEED</th>\n",
       "      <th>MELT_WEIGHT</th>\n",
       "      <th>INSP</th>\n",
       "      <th>TAG</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>489</td>\n",
       "      <td>116</td>\n",
       "      <td>631</td>\n",
       "      <td>3.19</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>433</td>\n",
       "      <td>78</td>\n",
       "      <td>609</td>\n",
       "      <td>3.19</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>464</td>\n",
       "      <td>154</td>\n",
       "      <td>608</td>\n",
       "      <td>3.19</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>379</td>\n",
       "      <td>212</td>\n",
       "      <td>606</td>\n",
       "      <td>3.19</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>798</td>\n",
       "      <td>1736</td>\n",
       "      <td>604</td>\n",
       "      <td>3.21</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>835195</th>\n",
       "      <td>755</td>\n",
       "      <td>1743</td>\n",
       "      <td>318</td>\n",
       "      <td>3.21</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>835196</th>\n",
       "      <td>385</td>\n",
       "      <td>206</td>\n",
       "      <td>317</td>\n",
       "      <td>3.19</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>835197</th>\n",
       "      <td>465</td>\n",
       "      <td>148</td>\n",
       "      <td>316</td>\n",
       "      <td>3.20</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>835198</th>\n",
       "      <td>467</td>\n",
       "      <td>0</td>\n",
       "      <td>314</td>\n",
       "      <td>3.19</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>835199</th>\n",
       "      <td>453</td>\n",
       "      <td>125</td>\n",
       "      <td>312</td>\n",
       "      <td>3.20</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>835200 rows × 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        MELT_TEMP  MOTORSPEED  MELT_WEIGHT  INSP  TAG\n",
       "0             489         116          631  3.19  1.0\n",
       "1             433          78          609  3.19  1.0\n",
       "2             464         154          608  3.19  1.0\n",
       "3             379         212          606  3.19  1.0\n",
       "4             798        1736          604  3.21  1.0\n",
       "...           ...         ...          ...   ...  ...\n",
       "835195        755        1743          318  3.21  1.0\n",
       "835196        385         206          317  3.19  1.0\n",
       "835197        465         148          316  3.20  1.0\n",
       "835198        467           0          314  3.19  1.0\n",
       "835199        453         125          312  3.20  1.0\n",
       "\n",
       "[835200 rows x 5 columns]"
      ]
     },
     "execution_count": 122,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = df[['MELT_TEMP', 'MOTORSPEED', 'MELT_WEIGHT', 'INSP', 'TAG']]\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1a8ab776",
   "metadata": {},
   "source": [
    "# 훈련 셋, 테스트 셋 분리"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 124,
   "id": "9668d347",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(835200, 4) (835200,)\n"
     ]
    }
   ],
   "source": [
    "x = df.iloc[:, :4].values\n",
    "y = df.iloc[:, -1:].values\n",
    "\n",
    "y = y.ravel()\n",
    "print(x.shape, y.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 125,
   "id": "97ac2412",
   "metadata": {},
   "outputs": [],
   "source": [
    "x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.3, random_state=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 126,
   "id": "7cef0244",
   "metadata": {},
   "outputs": [],
   "source": [
    "train_set_feature = pd.DataFrame(x_train, columns=['MELT_TEMP', 'MOTORSPEED', 'MELT_WEIGHT', 'INSP'])\n",
    "train_set_label = pd.DataFrame(y_train, columns=['TAG'])\n",
    "train_set = pd.concat([train_set_feature, train_set_label], axis = 1)\n",
    "\n",
    "test_set_feature = pd.DataFrame(x_test, columns=['MELT_TEMP', 'MOTORSPEED', 'MELT_WEIGHT', 'INSP'])\n",
    "test_set_label = pd.DataFrame(y_test, columns=['TAG'])\n",
    "test_set = pd.concat([test_set_feature, test_set_label], axis = 1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6ff2345a",
   "metadata": {},
   "source": [
    "# 정규화 진행(SMOTE)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 127,
   "id": "a1cd611e",
   "metadata": {},
   "outputs": [],
   "source": [
    "scaler = preprocessing.MinMaxScaler()\n",
    "\n",
    "train_sc = scaler.fit_transform(train_set)\n",
    "test_sc = scaler.transform(test_set)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5fc23c45",
   "metadata": {},
   "source": [
    "# 훈련 셋 독립변수, 종속변수 분리"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 128,
   "id": "ca7f75a6",
   "metadata": {},
   "outputs": [],
   "source": [
    "# train\n",
    "x_train_values = train_sc[:, :-1] # 독립변수 분리\n",
    "y_train_values = train_sc[:,-1] # 종속변수 분리\n",
    "\n",
    "# test\n",
    "x_test_values = test_sc[:, :-1] # 독립변수 분리\n",
    "y_test_values = test_sc[:,-1] # 종속변수 분리"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "353e1bcc",
   "metadata": {},
   "source": [
    "# 오버샘플링(SMOTE)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 129,
   "id": "5bfe2488",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "SMOTE 적용 전 학습용 피처/레이블 데이터 세트 :  (584640, 4) (584640,)\n",
      "SMOTE 적용 후 학습용 피처/레이블 데이터 세트 :  (921116, 4) (921116,)\n",
      "SMOTE 적용 후 레이블 값 분포: \n",
      " 0.0    460558\n",
      "1.0    460558\n",
      "dtype: int64\n"
     ]
    }
   ],
   "source": [
    "smote = SMOTE()\n",
    "x_train_over, y_train_over = smote.fit_resample(x_train_values, y_train_values)\n",
    "print('SMOTE 적용 전 학습용 피처/레이블 데이터 세트 : ', x_train_values.shape, y_train_values.shape)\n",
    "print('SMOTE 적용 후 학습용 피처/레이블 데이터 세트 : ', x_train_over.shape, y_train_over.shape)\n",
    "print('SMOTE 적용 후 레이블 값 분포: \\n', pd.Series(y_train_over).value_counts()) "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "37633a6d",
   "metadata": {},
   "source": [
    "# 의사결정나무(Decision Tree)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 130,
   "id": "383810ca",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DecisionTreeClassifier(random_state=0)"
      ]
     },
     "execution_count": 130,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.tree import DecisionTreeClassifier\n",
    "\n",
    "dsc = DecisionTreeClassifier(random_state = 0)\n",
    "dsc.fit(x_train_over, y_train_over)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 131,
   "id": "cf8c33ac",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "accuracy_score : 0.7204302362707535\n",
      "f1_score : 0.8184981642271745\n",
      "precision :  0.8385058874743849\n",
      "recall : 0.799423003922561\n"
     ]
    }
   ],
   "source": [
    "predict1 = dsc.predict(x_test_values)\n",
    "print('accuracy_score :', accuracy_score(y_test_values ,predict1))\n",
    "print('f1_score :', f1_score(y_test_values, predict1))\n",
    "print('precision : ', precision_score(y_test_values, predict1))\n",
    "print('recall :', recall_score(y_test_values, predict1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "ad4632b9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 22600,  30385],\n",
       "       [ 39840, 157735]], dtype=int64)"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "confusion_matrix(y_test, predict1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 133,
   "id": "38516083",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "    <style>\n",
       "    table.eli5-weights tr:hover {\n",
       "        filter: brightness(85%);\n",
       "    }\n",
       "</style>\n",
       "\n",
       "\n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "        <table class=\"eli5-weights eli5-feature-importances\" style=\"border-collapse: collapse; border: none; margin-top: 0em; table-layout: auto;\">\n",
       "    <thead>\n",
       "    <tr style=\"border: none;\">\n",
       "        <th style=\"padding: 0 1em 0 0.5em; text-align: right; border: none;\">Weight</th>\n",
       "        <th style=\"padding: 0 0.5em 0 0.5em; text-align: left; border: none;\">Feature</th>\n",
       "    </tr>\n",
       "    </thead>\n",
       "    <tbody>\n",
       "    \n",
       "        <tr style=\"background-color: hsl(120, 100.00%, 80.00%); border: none;\">\n",
       "            <td style=\"padding: 0 1em 0 0.5em; text-align: right; border: none;\">\n",
       "                0.0589\n",
       "                \n",
       "                    &plusmn; 0.0014\n",
       "                \n",
       "            </td>\n",
       "            <td style=\"padding: 0 0.5em 0 0.5em; text-align: left; border: none;\">\n",
       "                MELT_TEMP\n",
       "            </td>\n",
       "        </tr>\n",
       "    \n",
       "        <tr style=\"background-color: hsl(120, 100.00%, 88.38%); border: none;\">\n",
       "            <td style=\"padding: 0 1em 0 0.5em; text-align: right; border: none;\">\n",
       "                0.0271\n",
       "                \n",
       "                    &plusmn; 0.0014\n",
       "                \n",
       "            </td>\n",
       "            <td style=\"padding: 0 0.5em 0 0.5em; text-align: left; border: none;\">\n",
       "                MOTORSPEED\n",
       "            </td>\n",
       "        </tr>\n",
       "    \n",
       "        <tr style=\"background-color: hsl(120, 100.00%, 93.56%); border: none;\">\n",
       "            <td style=\"padding: 0 1em 0 0.5em; text-align: right; border: none;\">\n",
       "                0.0117\n",
       "                \n",
       "                    &plusmn; 0.0016\n",
       "                \n",
       "            </td>\n",
       "            <td style=\"padding: 0 0.5em 0 0.5em; text-align: left; border: none;\">\n",
       "                MELT_WEIGHT\n",
       "            </td>\n",
       "        </tr>\n",
       "    \n",
       "        <tr style=\"background-color: hsl(120, 100.00%, 97.66%); border: none;\">\n",
       "            <td style=\"padding: 0 1em 0 0.5em; text-align: right; border: none;\">\n",
       "                0.0027\n",
       "                \n",
       "                    &plusmn; 0.0007\n",
       "                \n",
       "            </td>\n",
       "            <td style=\"padding: 0 0.5em 0 0.5em; text-align: left; border: none;\">\n",
       "                INSP\n",
       "            </td>\n",
       "        </tr>\n",
       "    \n",
       "    \n",
       "    </tbody>\n",
       "</table>\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "execution_count": 133,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "perm = PermutationImportance(dsc).fit(x_test_values, y_test_values)\n",
    "eli5.show_weights(perm, top = 4, feature_names = train_set_feature.columns.tolist())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "04c7214d",
   "metadata": {},
   "source": [
    "# 시각화(Visualization)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "478eba35",
   "metadata": {},
   "outputs": [],
   "source": [
    "import matplotlib.pyplot as plt\n",
    "import graphviz\n",
    "\n",
    "from sklearn.tree import export_graphviz\n",
    "from sklearn.tree import plot_tree"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "id": "4d92f50b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/svg+xml": [
       "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n",
       "<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n",
       " \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n",
       "<!-- Generated by graphviz version 2.50.0 (0)\n",
       " -->\n",
       "<!-- Title: Tree Pages: 1 -->\n",
       "<svg width=\"1386pt\" height=\"520pt\"\n",
       " viewBox=\"0.00 0.00 1385.50 520.00\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n",
       "<g id=\"graph0\" class=\"graph\" transform=\"scale(1 1) rotate(0) translate(4 516)\">\n",
       "<title>Tree</title>\n",
       "<polygon fill=\"white\" stroke=\"transparent\" points=\"-4,4 -4,-516 1381.5,-516 1381.5,4 -4,4\"/>\n",
       "<!-- 0 -->\n",
       "<g id=\"node1\" class=\"node\">\n",
       "<title>0</title>\n",
       "<polygon fill=\"#ffffff\" stroke=\"black\" points=\"810.5,-512 654.5,-512 654.5,-429 810.5,-429 810.5,-512\"/>\n",
       "<text text-anchor=\"middle\" x=\"732.5\" y=\"-496.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">MELT_TEMP &lt;= 0.302</text>\n",
       "<text text-anchor=\"middle\" x=\"732.5\" y=\"-481.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.5</text>\n",
       "<text text-anchor=\"middle\" x=\"732.5\" y=\"-466.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 100.0%</text>\n",
       "<text text-anchor=\"middle\" x=\"732.5\" y=\"-451.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [0.5, 0.5]</text>\n",
       "<text text-anchor=\"middle\" x=\"732.5\" y=\"-436.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = NG</text>\n",
       "</g>\n",
       "<!-- 1 -->\n",
       "<g id=\"node2\" class=\"node\">\n",
       "<title>1</title>\n",
       "<polygon fill=\"#f0b88f\" stroke=\"black\" points=\"641,-393 468,-393 468,-310 641,-310 641,-393\"/>\n",
       "<text text-anchor=\"middle\" x=\"554.5\" y=\"-377.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">MOTORSPEED &lt;= 0.064</text>\n",
       "<text text-anchor=\"middle\" x=\"554.5\" y=\"-362.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.422</text>\n",
       "<text text-anchor=\"middle\" x=\"554.5\" y=\"-347.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 60.5%</text>\n",
       "<text text-anchor=\"middle\" x=\"554.5\" y=\"-332.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [0.697, 0.303]</text>\n",
       "<text text-anchor=\"middle\" x=\"554.5\" y=\"-317.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = NG</text>\n",
       "</g>\n",
       "<!-- 0&#45;&gt;1 -->\n",
       "<g id=\"edge1\" class=\"edge\">\n",
       "<title>0&#45;&gt;1</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M670.74,-428.91C655.83,-419.11 639.79,-408.56 624.53,-398.53\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"626.43,-395.59 616.15,-393.02 622.58,-401.44 626.43,-395.59\"/>\n",
       "<text text-anchor=\"middle\" x=\"621.21\" y=\"-413.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">True</text>\n",
       "</g>\n",
       "<!-- 256430 -->\n",
       "<g id=\"node17\" class=\"node\">\n",
       "<title>256430</title>\n",
       "<polygon fill=\"#6ab5eb\" stroke=\"black\" points=\"996.5,-393 840.5,-393 840.5,-310 996.5,-310 996.5,-393\"/>\n",
       "<text text-anchor=\"middle\" x=\"918.5\" y=\"-377.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">MELT_TEMP &lt;= 0.461</text>\n",
       "<text text-anchor=\"middle\" x=\"918.5\" y=\"-362.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.317</text>\n",
       "<text text-anchor=\"middle\" x=\"918.5\" y=\"-347.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 39.5%</text>\n",
       "<text text-anchor=\"middle\" x=\"918.5\" y=\"-332.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [0.198, 0.802]</text>\n",
       "<text text-anchor=\"middle\" x=\"918.5\" y=\"-317.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = OK</text>\n",
       "</g>\n",
       "<!-- 0&#45;&gt;256430 -->\n",
       "<g id=\"edge16\" class=\"edge\">\n",
       "<title>0&#45;&gt;256430</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M797.03,-428.91C812.61,-419.11 829.37,-408.56 845.32,-398.53\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"847.48,-401.31 854.08,-393.02 843.75,-395.38 847.48,-401.31\"/>\n",
       "<text text-anchor=\"middle\" x=\"848.53\" y=\"-413.7\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">False</text>\n",
       "</g>\n",
       "<!-- 2 -->\n",
       "<g id=\"node3\" class=\"node\">\n",
       "<title>2</title>\n",
       "<polygon fill=\"#eead7f\" stroke=\"black\" points=\"355.5,-274 199.5,-274 199.5,-191 355.5,-191 355.5,-274\"/>\n",
       "<text text-anchor=\"middle\" x=\"277.5\" y=\"-258.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">MELT_TEMP &lt;= 0.195</text>\n",
       "<text text-anchor=\"middle\" x=\"277.5\" y=\"-243.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.385</text>\n",
       "<text text-anchor=\"middle\" x=\"277.5\" y=\"-228.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 25.8%</text>\n",
       "<text text-anchor=\"middle\" x=\"277.5\" y=\"-213.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [0.74, 0.26]</text>\n",
       "<text text-anchor=\"middle\" x=\"277.5\" y=\"-198.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = NG</text>\n",
       "</g>\n",
       "<!-- 1&#45;&gt;2 -->\n",
       "<g id=\"edge2\" class=\"edge\">\n",
       "<title>1&#45;&gt;2</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M467.99,-313.96C435.34,-300.17 398.18,-284.47 365.4,-270.63\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"366.41,-267.25 355.83,-266.59 363.68,-273.7 366.41,-267.25\"/>\n",
       "</g>\n",
       "<!-- 113883 -->\n",
       "<g id=\"node10\" class=\"node\">\n",
       "<title>113883</title>\n",
       "<polygon fill=\"#f2c09d\" stroke=\"black\" points=\"632.5,-274 476.5,-274 476.5,-191 632.5,-191 632.5,-274\"/>\n",
       "<text text-anchor=\"middle\" x=\"554.5\" y=\"-258.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">MELT_TEMP &lt;= 0.296</text>\n",
       "<text text-anchor=\"middle\" x=\"554.5\" y=\"-243.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.445</text>\n",
       "<text text-anchor=\"middle\" x=\"554.5\" y=\"-228.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 34.7%</text>\n",
       "<text text-anchor=\"middle\" x=\"554.5\" y=\"-213.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [0.665, 0.335]</text>\n",
       "<text text-anchor=\"middle\" x=\"554.5\" y=\"-198.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = NG</text>\n",
       "</g>\n",
       "<!-- 1&#45;&gt;113883 -->\n",
       "<g id=\"edge9\" class=\"edge\">\n",
       "<title>1&#45;&gt;113883</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M554.5,-309.91C554.5,-301.65 554.5,-292.86 554.5,-284.3\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"558,-284.02 554.5,-274.02 551,-284.02 558,-284.02\"/>\n",
       "</g>\n",
       "<!-- 3 -->\n",
       "<g id=\"node4\" class=\"node\">\n",
       "<title>3</title>\n",
       "<polygon fill=\"#f2c29f\" stroke=\"black\" points=\"173,-155 0,-155 0,-72 173,-72 173,-155\"/>\n",
       "<text text-anchor=\"middle\" x=\"86.5\" y=\"-139.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">MOTORSPEED &lt;= 0.052</text>\n",
       "<text text-anchor=\"middle\" x=\"86.5\" y=\"-124.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.449</text>\n",
       "<text text-anchor=\"middle\" x=\"86.5\" y=\"-109.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 1.2%</text>\n",
       "<text text-anchor=\"middle\" x=\"86.5\" y=\"-94.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [0.66, 0.34]</text>\n",
       "<text text-anchor=\"middle\" x=\"86.5\" y=\"-79.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = NG</text>\n",
       "</g>\n",
       "<!-- 2&#45;&gt;3 -->\n",
       "<g id=\"edge3\" class=\"edge\">\n",
       "<title>2&#45;&gt;3</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M211.23,-190.91C195.09,-181.02 177.7,-170.37 161.19,-160.25\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"163,-157.26 152.65,-155.02 159.35,-163.23 163,-157.26\"/>\n",
       "</g>\n",
       "<!-- 5596 -->\n",
       "<g id=\"node7\" class=\"node\">\n",
       "<title>5596</title>\n",
       "<polygon fill=\"#eeac7d\" stroke=\"black\" points=\"364,-155 191,-155 191,-72 364,-72 364,-155\"/>\n",
       "<text text-anchor=\"middle\" x=\"277.5\" y=\"-139.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">MELT_WEIGHT &lt;= 0.013</text>\n",
       "<text text-anchor=\"middle\" x=\"277.5\" y=\"-124.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.381</text>\n",
       "<text text-anchor=\"middle\" x=\"277.5\" y=\"-109.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 24.6%</text>\n",
       "<text text-anchor=\"middle\" x=\"277.5\" y=\"-94.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [0.744, 0.256]</text>\n",
       "<text text-anchor=\"middle\" x=\"277.5\" y=\"-79.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = NG</text>\n",
       "</g>\n",
       "<!-- 2&#45;&gt;5596 -->\n",
       "<g id=\"edge6\" class=\"edge\">\n",
       "<title>2&#45;&gt;5596</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M277.5,-190.91C277.5,-182.65 277.5,-173.86 277.5,-165.3\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"281,-165.02 277.5,-155.02 274,-165.02 281,-165.02\"/>\n",
       "</g>\n",
       "<!-- 4 -->\n",
       "<g id=\"node5\" class=\"node\">\n",
       "<title>4</title>\n",
       "<polygon fill=\"#c0c0c0\" stroke=\"black\" points=\"77.5,-36 23.5,-36 23.5,0 77.5,0 77.5,-36\"/>\n",
       "<text text-anchor=\"middle\" x=\"50.5\" y=\"-14.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">(...)</text>\n",
       "</g>\n",
       "<!-- 3&#45;&gt;4 -->\n",
       "<g id=\"edge4\" class=\"edge\">\n",
       "<title>3&#45;&gt;4</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M70.81,-71.76C67.46,-63.04 63.99,-54.04 60.89,-45.99\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"64.06,-44.48 57.2,-36.41 57.53,-46.99 64.06,-44.48\"/>\n",
       "</g>\n",
       "<!-- 5369 -->\n",
       "<g id=\"node6\" class=\"node\">\n",
       "<title>5369</title>\n",
       "<polygon fill=\"#c0c0c0\" stroke=\"black\" points=\"149.5,-36 95.5,-36 95.5,0 149.5,0 149.5,-36\"/>\n",
       "<text text-anchor=\"middle\" x=\"122.5\" y=\"-14.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">(...)</text>\n",
       "</g>\n",
       "<!-- 3&#45;&gt;5369 -->\n",
       "<g id=\"edge5\" class=\"edge\">\n",
       "<title>3&#45;&gt;5369</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M102.19,-71.76C105.54,-63.04 109.01,-54.04 112.11,-45.99\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"115.47,-46.99 115.8,-36.41 108.94,-44.48 115.47,-46.99\"/>\n",
       "</g>\n",
       "<!-- 5597 -->\n",
       "<g id=\"node8\" class=\"node\">\n",
       "<title>5597</title>\n",
       "<polygon fill=\"#c0c0c0\" stroke=\"black\" points=\"273.5,-36 219.5,-36 219.5,0 273.5,0 273.5,-36\"/>\n",
       "<text text-anchor=\"middle\" x=\"246.5\" y=\"-14.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">(...)</text>\n",
       "</g>\n",
       "<!-- 5596&#45;&gt;5597 -->\n",
       "<g id=\"edge7\" class=\"edge\">\n",
       "<title>5596&#45;&gt;5597</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M263.99,-71.76C261.1,-63.04 258.12,-54.04 255.45,-45.99\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"258.74,-44.8 252.27,-36.41 252.1,-47 258.74,-44.8\"/>\n",
       "</g>\n",
       "<!-- 104832 -->\n",
       "<g id=\"node9\" class=\"node\">\n",
       "<title>104832</title>\n",
       "<polygon fill=\"#c0c0c0\" stroke=\"black\" points=\"345.5,-36 291.5,-36 291.5,0 345.5,0 345.5,-36\"/>\n",
       "<text text-anchor=\"middle\" x=\"318.5\" y=\"-14.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">(...)</text>\n",
       "</g>\n",
       "<!-- 5596&#45;&gt;104832 -->\n",
       "<g id=\"edge8\" class=\"edge\">\n",
       "<title>5596&#45;&gt;104832</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M295.36,-71.76C299.23,-62.94 303.22,-53.84 306.78,-45.72\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"310.06,-46.97 310.87,-36.41 303.65,-44.16 310.06,-46.97\"/>\n",
       "</g>\n",
       "<!-- 113884 -->\n",
       "<g id=\"node11\" class=\"node\">\n",
       "<title>113884</title>\n",
       "<polygon fill=\"#f2be98\" stroke=\"black\" points=\"555,-155 382,-155 382,-72 555,-72 555,-155\"/>\n",
       "<text text-anchor=\"middle\" x=\"468.5\" y=\"-139.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">MELT_WEIGHT &lt;= 0.012</text>\n",
       "<text text-anchor=\"middle\" x=\"468.5\" y=\"-124.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.439</text>\n",
       "<text text-anchor=\"middle\" x=\"468.5\" y=\"-109.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 33.2%</text>\n",
       "<text text-anchor=\"middle\" x=\"468.5\" y=\"-94.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [0.675, 0.325]</text>\n",
       "<text text-anchor=\"middle\" x=\"468.5\" y=\"-79.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = NG</text>\n",
       "</g>\n",
       "<!-- 113883&#45;&gt;113884 -->\n",
       "<g id=\"edge10\" class=\"edge\">\n",
       "<title>113883&#45;&gt;113884</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M524.66,-190.91C518.13,-182.01 511.14,-172.51 504.39,-163.33\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"507.03,-161.01 498.28,-155.02 501.39,-165.15 507.03,-161.01\"/>\n",
       "</g>\n",
       "<!-- 249257 -->\n",
       "<g id=\"node14\" class=\"node\">\n",
       "<title>249257</title>\n",
       "<polygon fill=\"#ddeefb\" stroke=\"black\" points=\"720,-155 573,-155 573,-72 720,-72 720,-155\"/>\n",
       "<text text-anchor=\"middle\" x=\"646.5\" y=\"-139.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">MELT_TEMP &lt;= 0.3</text>\n",
       "<text text-anchor=\"middle\" x=\"646.5\" y=\"-124.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.496</text>\n",
       "<text text-anchor=\"middle\" x=\"646.5\" y=\"-109.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 1.6%</text>\n",
       "<text text-anchor=\"middle\" x=\"646.5\" y=\"-94.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [0.453, 0.547]</text>\n",
       "<text text-anchor=\"middle\" x=\"646.5\" y=\"-79.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = OK</text>\n",
       "</g>\n",
       "<!-- 113883&#45;&gt;249257 -->\n",
       "<g id=\"edge13\" class=\"edge\">\n",
       "<title>113883&#45;&gt;249257</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M586.42,-190.91C593.48,-181.92 601.04,-172.32 608.32,-163.05\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"611.21,-165.05 614.64,-155.02 605.7,-160.72 611.21,-165.05\"/>\n",
       "</g>\n",
       "<!-- 113885 -->\n",
       "<g id=\"node12\" class=\"node\">\n",
       "<title>113885</title>\n",
       "<polygon fill=\"#c0c0c0\" stroke=\"black\" points=\"440.5,-36 386.5,-36 386.5,0 440.5,0 440.5,-36\"/>\n",
       "<text text-anchor=\"middle\" x=\"413.5\" y=\"-14.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">(...)</text>\n",
       "</g>\n",
       "<!-- 113884&#45;&gt;113885 -->\n",
       "<g id=\"edge11\" class=\"edge\">\n",
       "<title>113884&#45;&gt;113885</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M444.54,-71.76C439.24,-62.75 433.76,-53.44 428.91,-45.19\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"431.83,-43.25 423.74,-36.41 425.79,-46.8 431.83,-43.25\"/>\n",
       "</g>\n",
       "<!-- 226888 -->\n",
       "<g id=\"node13\" class=\"node\">\n",
       "<title>226888</title>\n",
       "<polygon fill=\"#c0c0c0\" stroke=\"black\" points=\"512.5,-36 458.5,-36 458.5,0 512.5,0 512.5,-36\"/>\n",
       "<text text-anchor=\"middle\" x=\"485.5\" y=\"-14.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">(...)</text>\n",
       "</g>\n",
       "<!-- 113884&#45;&gt;226888 -->\n",
       "<g id=\"edge12\" class=\"edge\">\n",
       "<title>113884&#45;&gt;226888</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M475.91,-71.76C477.47,-63.14 479.09,-54.24 480.54,-46.26\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"483.99,-46.87 482.34,-36.41 477.1,-45.62 483.99,-46.87\"/>\n",
       "</g>\n",
       "<!-- 249258 -->\n",
       "<g id=\"node15\" class=\"node\">\n",
       "<title>249258</title>\n",
       "<polygon fill=\"#c0c0c0\" stroke=\"black\" points=\"618.5,-36 564.5,-36 564.5,0 618.5,0 618.5,-36\"/>\n",
       "<text text-anchor=\"middle\" x=\"591.5\" y=\"-14.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">(...)</text>\n",
       "</g>\n",
       "<!-- 249257&#45;&gt;249258 -->\n",
       "<g id=\"edge14\" class=\"edge\">\n",
       "<title>249257&#45;&gt;249258</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M622.54,-71.76C617.24,-62.75 611.76,-53.44 606.91,-45.19\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"609.83,-43.25 601.74,-36.41 603.79,-46.8 609.83,-43.25\"/>\n",
       "</g>\n",
       "<!-- 256429 -->\n",
       "<g id=\"node16\" class=\"node\">\n",
       "<title>256429</title>\n",
       "<polygon fill=\"#c0c0c0\" stroke=\"black\" points=\"690.5,-36 636.5,-36 636.5,0 690.5,0 690.5,-36\"/>\n",
       "<text text-anchor=\"middle\" x=\"663.5\" y=\"-14.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">(...)</text>\n",
       "</g>\n",
       "<!-- 249257&#45;&gt;256429 -->\n",
       "<g id=\"edge15\" class=\"edge\">\n",
       "<title>249257&#45;&gt;256429</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M653.91,-71.76C655.47,-63.14 657.09,-54.24 658.54,-46.26\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"661.99,-46.87 660.34,-36.41 655.1,-45.62 661.99,-46.87\"/>\n",
       "</g>\n",
       "<!-- 256431 -->\n",
       "<g id=\"node18\" class=\"node\">\n",
       "<title>256431</title>\n",
       "<polygon fill=\"#8ac5f0\" stroke=\"black\" points=\"1005,-274 832,-274 832,-191 1005,-191 1005,-274\"/>\n",
       "<text text-anchor=\"middle\" x=\"918.5\" y=\"-258.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">MELT_WEIGHT &lt;= 0.011</text>\n",
       "<text text-anchor=\"middle\" x=\"918.5\" y=\"-243.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.413</text>\n",
       "<text text-anchor=\"middle\" x=\"918.5\" y=\"-228.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 26.8%</text>\n",
       "<text text-anchor=\"middle\" x=\"918.5\" y=\"-213.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [0.291, 0.709]</text>\n",
       "<text text-anchor=\"middle\" x=\"918.5\" y=\"-198.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = OK</text>\n",
       "</g>\n",
       "<!-- 256430&#45;&gt;256431 -->\n",
       "<g id=\"edge17\" class=\"edge\">\n",
       "<title>256430&#45;&gt;256431</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M918.5,-309.91C918.5,-301.65 918.5,-292.86 918.5,-284.3\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"922,-284.02 918.5,-274.02 915,-284.02 922,-284.02\"/>\n",
       "</g>\n",
       "<!-- 341240 -->\n",
       "<g id=\"node25\" class=\"node\">\n",
       "<title>341240</title>\n",
       "<polygon fill=\"#399de5\" stroke=\"black\" points=\"1239.5,-274 1117.5,-274 1117.5,-191 1239.5,-191 1239.5,-274\"/>\n",
       "<text text-anchor=\"middle\" x=\"1178.5\" y=\"-258.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">INSP &lt;= 0.25</text>\n",
       "<text text-anchor=\"middle\" x=\"1178.5\" y=\"-243.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"1178.5\" y=\"-228.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 12.7%</text>\n",
       "<text text-anchor=\"middle\" x=\"1178.5\" y=\"-213.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [0.0, 1.0]</text>\n",
       "<text text-anchor=\"middle\" x=\"1178.5\" y=\"-198.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = OK</text>\n",
       "</g>\n",
       "<!-- 256430&#45;&gt;341240 -->\n",
       "<g id=\"edge24\" class=\"edge\">\n",
       "<title>256430&#45;&gt;341240</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M996.51,-315.4C1031.92,-299.46 1073.49,-280.75 1107.96,-265.24\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"1109.8,-268.25 1117.48,-260.96 1106.93,-261.87 1109.8,-268.25\"/>\n",
       "</g>\n",
       "<!-- 256432 -->\n",
       "<g id=\"node19\" class=\"node\">\n",
       "<title>256432</title>\n",
       "<polygon fill=\"#7bbeee\" stroke=\"black\" points=\"911,-155 738,-155 738,-72 911,-72 911,-155\"/>\n",
       "<text text-anchor=\"middle\" x=\"824.5\" y=\"-139.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">MOTORSPEED &lt;= 0.055</text>\n",
       "<text text-anchor=\"middle\" x=\"824.5\" y=\"-124.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.376</text>\n",
       "<text text-anchor=\"middle\" x=\"824.5\" y=\"-109.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 20.6%</text>\n",
       "<text text-anchor=\"middle\" x=\"824.5\" y=\"-94.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [0.251, 0.749]</text>\n",
       "<text text-anchor=\"middle\" x=\"824.5\" y=\"-79.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = OK</text>\n",
       "</g>\n",
       "<!-- 256431&#45;&gt;256432 -->\n",
       "<g id=\"edge18\" class=\"edge\">\n",
       "<title>256431&#45;&gt;256432</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M885.89,-190.91C878.67,-181.92 870.95,-172.32 863.51,-163.05\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"866.05,-160.62 857.06,-155.02 860.59,-165.01 866.05,-160.62\"/>\n",
       "</g>\n",
       "<!-- 321935 -->\n",
       "<g id=\"node22\" class=\"node\">\n",
       "<title>321935</title>\n",
       "<polygon fill=\"#cde6f8\" stroke=\"black\" points=\"1102,-155 929,-155 929,-72 1102,-72 1102,-155\"/>\n",
       "<text text-anchor=\"middle\" x=\"1015.5\" y=\"-139.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">MELT_WEIGHT &lt;= 0.014</text>\n",
       "<text text-anchor=\"middle\" x=\"1015.5\" y=\"-124.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.489</text>\n",
       "<text text-anchor=\"middle\" x=\"1015.5\" y=\"-109.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 6.2%</text>\n",
       "<text text-anchor=\"middle\" x=\"1015.5\" y=\"-94.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [0.427, 0.573]</text>\n",
       "<text text-anchor=\"middle\" x=\"1015.5\" y=\"-79.8\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = OK</text>\n",
       "</g>\n",
       "<!-- 256431&#45;&gt;321935 -->\n",
       "<g id=\"edge21\" class=\"edge\">\n",
       "<title>256431&#45;&gt;321935</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M952.15,-190.91C959.68,-181.83 967.73,-172.12 975.48,-162.77\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"978.22,-164.95 981.91,-155.02 972.83,-160.49 978.22,-164.95\"/>\n",
       "</g>\n",
       "<!-- 256433 -->\n",
       "<g id=\"node20\" class=\"node\">\n",
       "<title>256433</title>\n",
       "<polygon fill=\"#c0c0c0\" stroke=\"black\" points=\"802.5,-36 748.5,-36 748.5,0 802.5,0 802.5,-36\"/>\n",
       "<text text-anchor=\"middle\" x=\"775.5\" y=\"-14.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">(...)</text>\n",
       "</g>\n",
       "<!-- 256432&#45;&gt;256433 -->\n",
       "<g id=\"edge19\" class=\"edge\">\n",
       "<title>256432&#45;&gt;256433</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M803.15,-71.76C798.48,-62.85 793.65,-53.64 789.37,-45.46\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"792.36,-43.64 784.62,-36.41 786.16,-46.89 792.36,-43.64\"/>\n",
       "</g>\n",
       "<!-- 263622 -->\n",
       "<g id=\"node21\" class=\"node\">\n",
       "<title>263622</title>\n",
       "<polygon fill=\"#c0c0c0\" stroke=\"black\" points=\"874.5,-36 820.5,-36 820.5,0 874.5,0 874.5,-36\"/>\n",
       "<text text-anchor=\"middle\" x=\"847.5\" y=\"-14.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">(...)</text>\n",
       "</g>\n",
       "<!-- 256432&#45;&gt;263622 -->\n",
       "<g id=\"edge20\" class=\"edge\">\n",
       "<title>256432&#45;&gt;263622</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M834.52,-71.76C836.64,-63.14 838.83,-54.24 840.79,-46.26\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"844.23,-46.95 843.22,-36.41 837.43,-45.28 844.23,-46.95\"/>\n",
       "</g>\n",
       "<!-- 321936 -->\n",
       "<g id=\"node23\" class=\"node\">\n",
       "<title>321936</title>\n",
       "<polygon fill=\"#c0c0c0\" stroke=\"black\" points=\"1006.5,-36 952.5,-36 952.5,0 1006.5,0 1006.5,-36\"/>\n",
       "<text text-anchor=\"middle\" x=\"979.5\" y=\"-14.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">(...)</text>\n",
       "</g>\n",
       "<!-- 321935&#45;&gt;321936 -->\n",
       "<g id=\"edge22\" class=\"edge\">\n",
       "<title>321935&#45;&gt;321936</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M999.81,-71.76C996.46,-63.04 992.99,-54.04 989.89,-45.99\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"993.06,-44.48 986.2,-36.41 986.53,-46.99 993.06,-44.48\"/>\n",
       "</g>\n",
       "<!-- 337217 -->\n",
       "<g id=\"node24\" class=\"node\">\n",
       "<title>337217</title>\n",
       "<polygon fill=\"#c0c0c0\" stroke=\"black\" points=\"1078.5,-36 1024.5,-36 1024.5,0 1078.5,0 1078.5,-36\"/>\n",
       "<text text-anchor=\"middle\" x=\"1051.5\" y=\"-14.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">(...)</text>\n",
       "</g>\n",
       "<!-- 321935&#45;&gt;337217 -->\n",
       "<g id=\"edge23\" class=\"edge\">\n",
       "<title>321935&#45;&gt;337217</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M1031.19,-71.76C1034.54,-63.04 1038.01,-54.04 1041.11,-45.99\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"1044.47,-46.99 1044.8,-36.41 1037.94,-44.48 1044.47,-46.99\"/>\n",
       "</g>\n",
       "<!-- 341241 -->\n",
       "<g id=\"node26\" class=\"node\">\n",
       "<title>341241</title>\n",
       "<polygon fill=\"#e58139\" stroke=\"black\" points=\"1237,-147.5 1120,-147.5 1120,-79.5 1237,-79.5 1237,-147.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"1178.5\" y=\"-132.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"1178.5\" y=\"-117.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 0.0%</text>\n",
       "<text text-anchor=\"middle\" x=\"1178.5\" y=\"-102.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [1.0, 0.0]</text>\n",
       "<text text-anchor=\"middle\" x=\"1178.5\" y=\"-87.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = NG</text>\n",
       "</g>\n",
       "<!-- 341240&#45;&gt;341241 -->\n",
       "<g id=\"edge25\" class=\"edge\">\n",
       "<title>341240&#45;&gt;341241</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M1178.5,-190.91C1178.5,-180.2 1178.5,-168.62 1178.5,-157.78\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"1182,-157.67 1178.5,-147.67 1175,-157.67 1182,-157.67\"/>\n",
       "</g>\n",
       "<!-- 341242 -->\n",
       "<g id=\"node27\" class=\"node\">\n",
       "<title>341242</title>\n",
       "<polygon fill=\"#399de5\" stroke=\"black\" points=\"1377.5,-147.5 1255.5,-147.5 1255.5,-79.5 1377.5,-79.5 1377.5,-147.5\"/>\n",
       "<text text-anchor=\"middle\" x=\"1316.5\" y=\"-132.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">gini = 0.0</text>\n",
       "<text text-anchor=\"middle\" x=\"1316.5\" y=\"-117.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">samples = 12.7%</text>\n",
       "<text text-anchor=\"middle\" x=\"1316.5\" y=\"-102.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">value = [0.0, 1.0]</text>\n",
       "<text text-anchor=\"middle\" x=\"1316.5\" y=\"-87.3\" font-family=\"Helvetica,sans-Serif\" font-size=\"14.00\">class = OK</text>\n",
       "</g>\n",
       "<!-- 341240&#45;&gt;341242 -->\n",
       "<g id=\"edge26\" class=\"edge\">\n",
       "<title>341240&#45;&gt;341242</title>\n",
       "<path fill=\"none\" stroke=\"black\" d=\"M1226.38,-190.91C1240.3,-179.1 1255.5,-166.22 1269.38,-154.45\"/>\n",
       "<polygon fill=\"black\" stroke=\"black\" points=\"1272.02,-156.8 1277.38,-147.67 1267.49,-151.46 1272.02,-156.8\"/>\n",
       "</g>\n",
       "</g>\n",
       "</svg>\n"
      ],
      "text/plain": [
       "<graphviz.sources.Source at 0x2670193e040>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "dot_data = export_graphviz(dsc\n",
    "                          , max_depth=3\n",
    "                          , feature_names=train_set_feature.columns\n",
    "                          , class_names=['NG', 'OK']\n",
    "                          , filled=True\n",
    "                          , proportion=True)\n",
    "\n",
    "\n",
    "display(graphviz.Source(dot_data))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1117b3aa",
   "metadata": {},
   "source": [
    "# 랜덤포레스트(Random Forest)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 170,
   "id": "e0d5abb2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RandomForestClassifier(max_depth=5)"
      ]
     },
     "execution_count": 170,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from sklearn.ensemble import RandomForestClassifier\n",
    "\n",
    "clf = RandomForestClassifier(max_depth=5)\n",
    "clf.fit(x_train_over,y_train_over)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 171,
   "id": "97a53d9a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "accuracy_score : 0.6833692528735632\n",
      "f1_score : 0.7612398014921197\n",
      "precision :  0.9388882290058201\n",
      "recall : 0.6401214728584081\n"
     ]
    }
   ],
   "source": [
    "predict2 = clf.predict(x_test_values)\n",
    "print('accuracy_score :', accuracy_score(y_test_values ,predict2))\n",
    "print('f1_score :', f1_score(y_test_values, predict2))\n",
    "print('precision : ', precision_score(y_test_values, predict2))\n",
    "print('recall :', recall_score(y_test_values, predict2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 172,
   "id": "4bf49d2c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 22565,  30420],\n",
       "       [ 39629, 157946]], dtype=int64)"
      ]
     },
     "execution_count": 172,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "confusion_matrix(y_test, predict1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 173,
   "id": "66fbe073",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "    <style>\n",
       "    table.eli5-weights tr:hover {\n",
       "        filter: brightness(85%);\n",
       "    }\n",
       "</style>\n",
       "\n",
       "\n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "        <table class=\"eli5-weights eli5-feature-importances\" style=\"border-collapse: collapse; border: none; margin-top: 0em; table-layout: auto;\">\n",
       "    <thead>\n",
       "    <tr style=\"border: none;\">\n",
       "        <th style=\"padding: 0 1em 0 0.5em; text-align: right; border: none;\">Weight</th>\n",
       "        <th style=\"padding: 0 0.5em 0 0.5em; text-align: left; border: none;\">Feature</th>\n",
       "    </tr>\n",
       "    </thead>\n",
       "    <tbody>\n",
       "    \n",
       "        <tr style=\"background-color: hsl(120, 100.00%, 80.00%); border: none;\">\n",
       "            <td style=\"padding: 0 1em 0 0.5em; text-align: right; border: none;\">\n",
       "                0.0670\n",
       "                \n",
       "                    &plusmn; 0.0005\n",
       "                \n",
       "            </td>\n",
       "            <td style=\"padding: 0 0.5em 0 0.5em; text-align: left; border: none;\">\n",
       "                MELT_TEMP\n",
       "            </td>\n",
       "        </tr>\n",
       "    \n",
       "        <tr style=\"background-color: hsl(120, 100.00%, 99.67%); border: none;\">\n",
       "            <td style=\"padding: 0 1em 0 0.5em; text-align: right; border: none;\">\n",
       "                0.0002\n",
       "                \n",
       "                    &plusmn; 0.0001\n",
       "                \n",
       "            </td>\n",
       "            <td style=\"padding: 0 0.5em 0 0.5em; text-align: left; border: none;\">\n",
       "                MELT_WEIGHT\n",
       "            </td>\n",
       "        </tr>\n",
       "    \n",
       "        <tr style=\"background-color: hsl(0, 100.00%, 99.36%); border: none;\">\n",
       "            <td style=\"padding: 0 1em 0 0.5em; text-align: right; border: none;\">\n",
       "                -0.0005\n",
       "                \n",
       "                    &plusmn; 0.0001\n",
       "                \n",
       "            </td>\n",
       "            <td style=\"padding: 0 0.5em 0 0.5em; text-align: left; border: none;\">\n",
       "                INSP\n",
       "            </td>\n",
       "        </tr>\n",
       "    \n",
       "        <tr style=\"background-color: hsl(0, 100.00%, 91.30%); border: none;\">\n",
       "            <td style=\"padding: 0 1em 0 0.5em; text-align: right; border: none;\">\n",
       "                -0.0204\n",
       "                \n",
       "                    &plusmn; 0.0010\n",
       "                \n",
       "            </td>\n",
       "            <td style=\"padding: 0 0.5em 0 0.5em; text-align: left; border: none;\">\n",
       "                MOTORSPEED\n",
       "            </td>\n",
       "        </tr>\n",
       "    \n",
       "    \n",
       "    </tbody>\n",
       "</table>\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "execution_count": 173,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "perm = PermutationImportance(clf).fit(x_test_values, y_test_values)\n",
    "eli5.show_weights(perm, top = 4, feature_names = train_set_feature.columns.tolist())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ccd1eee7",
   "metadata": {},
   "source": [
    "# Xgboost"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 138,
   "id": "07330d93",
   "metadata": {},
   "outputs": [],
   "source": [
    "import xgboost\n",
    "from xgboost import XGBClassifier\n",
    "\n",
    "xgb = XGBClassifier(n_estimators = 300, learning_rate = 0.2, max_depth = 15, random_state = 1).fit(x_train_over, y_train_over)\n",
    "predict4 = xgb.predict(x_test_values)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 139,
   "id": "29b58fbd",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "accuracy_score : 0.7632343550446998\n",
      "f1_score : 0.8502675416456336\n",
      "precision :  0.8480201384518565\n",
      "recall : 0.8525268885233456\n"
     ]
    }
   ],
   "source": [
    "print('accuracy_score :', accuracy_score(y_test_values ,predict4))\n",
    "print('f1_score :', f1_score(y_test_values, predict4))\n",
    "print('precision : ', precision_score(y_test_values, predict4))\n",
    "print('recall :', recall_score(y_test_values, predict4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 147,
   "id": "00c2e48b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 22798,  30187],\n",
       "       [ 29137, 168438]], dtype=int64)"
      ]
     },
     "execution_count": 147,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "confusion_matrix(y_test, predict4)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 140,
   "id": "5dc21f7d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "    <style>\n",
       "    table.eli5-weights tr:hover {\n",
       "        filter: brightness(85%);\n",
       "    }\n",
       "</style>\n",
       "\n",
       "\n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "        <table class=\"eli5-weights eli5-feature-importances\" style=\"border-collapse: collapse; border: none; margin-top: 0em; table-layout: auto;\">\n",
       "    <thead>\n",
       "    <tr style=\"border: none;\">\n",
       "        <th style=\"padding: 0 1em 0 0.5em; text-align: right; border: none;\">Weight</th>\n",
       "        <th style=\"padding: 0 0.5em 0 0.5em; text-align: left; border: none;\">Feature</th>\n",
       "    </tr>\n",
       "    </thead>\n",
       "    <tbody>\n",
       "    \n",
       "        <tr style=\"background-color: hsl(120, 100.00%, 80.00%); border: none;\">\n",
       "            <td style=\"padding: 0 1em 0 0.5em; text-align: right; border: none;\">\n",
       "                0.0411\n",
       "                \n",
       "                    &plusmn; 0.0009\n",
       "                \n",
       "            </td>\n",
       "            <td style=\"padding: 0 0.5em 0 0.5em; text-align: left; border: none;\">\n",
       "                MELT_TEMP\n",
       "            </td>\n",
       "        </tr>\n",
       "    \n",
       "        <tr style=\"background-color: hsl(120, 100.00%, 90.71%); border: none;\">\n",
       "            <td style=\"padding: 0 1em 0 0.5em; text-align: right; border: none;\">\n",
       "                0.0137\n",
       "                \n",
       "                    &plusmn; 0.0013\n",
       "                \n",
       "            </td>\n",
       "            <td style=\"padding: 0 0.5em 0 0.5em; text-align: left; border: none;\">\n",
       "                MELT_WEIGHT\n",
       "            </td>\n",
       "        </tr>\n",
       "    \n",
       "        <tr style=\"background-color: hsl(120, 100.00%, 99.88%); border: none;\">\n",
       "            <td style=\"padding: 0 1em 0 0.5em; text-align: right; border: none;\">\n",
       "                0.0000\n",
       "                \n",
       "                    &plusmn; 0.0010\n",
       "                \n",
       "            </td>\n",
       "            <td style=\"padding: 0 0.5em 0 0.5em; text-align: left; border: none;\">\n",
       "                INSP\n",
       "            </td>\n",
       "        </tr>\n",
       "    \n",
       "        <tr style=\"background-color: hsl(0, 100.00%, 97.85%); border: none;\">\n",
       "            <td style=\"padding: 0 1em 0 0.5em; text-align: right; border: none;\">\n",
       "                -0.0017\n",
       "                \n",
       "                    &plusmn; 0.0004\n",
       "                \n",
       "            </td>\n",
       "            <td style=\"padding: 0 0.5em 0 0.5em; text-align: left; border: none;\">\n",
       "                MOTORSPEED\n",
       "            </td>\n",
       "        </tr>\n",
       "    \n",
       "    \n",
       "    </tbody>\n",
       "</table>\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "execution_count": 140,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "perm = PermutationImportance(xgb, scoring = \"accuracy\").fit(x_test_values, y_test_values)\n",
    "eli5.show_weights(perm, top = 4, feature_names = train_set_feature.columns.tolist())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f36f6c15",
   "metadata": {},
   "source": [
    "# Catboost"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 141,
   "id": "ffbf182f",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Learning rate set to 0.5\n",
      "0:\tlearn: 0.5481566\ttotal: 64.4ms\tremaining: 19.3s\n",
      "1:\tlearn: 0.5300510\ttotal: 124ms\tremaining: 18.4s\n",
      "2:\tlearn: 0.5186464\ttotal: 180ms\tremaining: 17.8s\n",
      "3:\tlearn: 0.5161160\ttotal: 237ms\tremaining: 17.5s\n",
      "4:\tlearn: 0.5150319\ttotal: 295ms\tremaining: 17.4s\n",
      "5:\tlearn: 0.5139706\ttotal: 353ms\tremaining: 17.3s\n",
      "6:\tlearn: 0.5132481\ttotal: 422ms\tremaining: 17.6s\n",
      "7:\tlearn: 0.5124468\ttotal: 490ms\tremaining: 17.9s\n",
      "8:\tlearn: 0.5118383\ttotal: 556ms\tremaining: 18s\n",
      "9:\tlearn: 0.5108536\ttotal: 623ms\tremaining: 18.1s\n",
      "10:\tlearn: 0.5104291\ttotal: 698ms\tremaining: 18.3s\n",
      "11:\tlearn: 0.5081768\ttotal: 767ms\tremaining: 18.4s\n",
      "12:\tlearn: 0.5079151\ttotal: 839ms\tremaining: 18.5s\n",
      "13:\tlearn: 0.5055939\ttotal: 906ms\tremaining: 18.5s\n",
      "14:\tlearn: 0.5039289\ttotal: 971ms\tremaining: 18.4s\n",
      "15:\tlearn: 0.5024607\ttotal: 1.03s\tremaining: 18.3s\n",
      "16:\tlearn: 0.5007998\ttotal: 1.1s\tremaining: 18.3s\n",
      "17:\tlearn: 0.4993790\ttotal: 1.16s\tremaining: 18.2s\n",
      "18:\tlearn: 0.4977919\ttotal: 1.22s\tremaining: 18.1s\n",
      "19:\tlearn: 0.4968008\ttotal: 1.29s\tremaining: 18s\n",
      "20:\tlearn: 0.4953020\ttotal: 1.35s\tremaining: 18s\n",
      "21:\tlearn: 0.4945928\ttotal: 1.42s\tremaining: 18s\n",
      "22:\tlearn: 0.4943827\ttotal: 1.48s\tremaining: 17.8s\n",
      "23:\tlearn: 0.4925651\ttotal: 1.54s\tremaining: 17.8s\n",
      "24:\tlearn: 0.4919438\ttotal: 1.61s\tremaining: 17.7s\n",
      "25:\tlearn: 0.4911409\ttotal: 1.67s\tremaining: 17.6s\n",
      "26:\tlearn: 0.4908011\ttotal: 1.74s\tremaining: 17.6s\n",
      "27:\tlearn: 0.4901588\ttotal: 1.81s\tremaining: 17.6s\n",
      "28:\tlearn: 0.4897367\ttotal: 1.88s\tremaining: 17.5s\n",
      "29:\tlearn: 0.4895509\ttotal: 1.94s\tremaining: 17.5s\n",
      "30:\tlearn: 0.4868730\ttotal: 2.01s\tremaining: 17.4s\n",
      "31:\tlearn: 0.4855599\ttotal: 2.07s\tremaining: 17.3s\n",
      "32:\tlearn: 0.4823969\ttotal: 2.14s\tremaining: 17.3s\n",
      "33:\tlearn: 0.4821816\ttotal: 2.19s\tremaining: 17.1s\n",
      "34:\tlearn: 0.4820888\ttotal: 2.25s\tremaining: 17s\n",
      "35:\tlearn: 0.4818295\ttotal: 2.31s\tremaining: 16.9s\n",
      "36:\tlearn: 0.4814691\ttotal: 2.38s\tremaining: 16.9s\n",
      "37:\tlearn: 0.4786881\ttotal: 2.45s\tremaining: 16.9s\n",
      "38:\tlearn: 0.4764898\ttotal: 2.52s\tremaining: 16.9s\n",
      "39:\tlearn: 0.4752073\ttotal: 2.6s\tremaining: 16.9s\n",
      "40:\tlearn: 0.4740520\ttotal: 2.67s\tremaining: 16.9s\n",
      "41:\tlearn: 0.4729844\ttotal: 2.74s\tremaining: 16.8s\n",
      "42:\tlearn: 0.4729040\ttotal: 2.8s\tremaining: 16.7s\n",
      "43:\tlearn: 0.4727792\ttotal: 2.85s\tremaining: 16.6s\n",
      "44:\tlearn: 0.4724992\ttotal: 2.92s\tremaining: 16.5s\n",
      "45:\tlearn: 0.4721879\ttotal: 2.97s\tremaining: 16.4s\n",
      "46:\tlearn: 0.4720581\ttotal: 3.04s\tremaining: 16.3s\n",
      "47:\tlearn: 0.4720027\ttotal: 3.09s\tremaining: 16.2s\n",
      "48:\tlearn: 0.4719010\ttotal: 3.15s\tremaining: 16.2s\n",
      "49:\tlearn: 0.4710267\ttotal: 3.22s\tremaining: 16.1s\n",
      "50:\tlearn: 0.4709046\ttotal: 3.29s\tremaining: 16.1s\n",
      "51:\tlearn: 0.4707418\ttotal: 3.35s\tremaining: 16s\n",
      "52:\tlearn: 0.4704764\ttotal: 3.41s\tremaining: 15.9s\n",
      "53:\tlearn: 0.4703795\ttotal: 3.47s\tremaining: 15.8s\n",
      "54:\tlearn: 0.4701869\ttotal: 3.53s\tremaining: 15.7s\n",
      "55:\tlearn: 0.4700989\ttotal: 3.6s\tremaining: 15.7s\n",
      "56:\tlearn: 0.4700543\ttotal: 3.66s\tremaining: 15.6s\n",
      "57:\tlearn: 0.4699747\ttotal: 3.72s\tremaining: 15.5s\n",
      "58:\tlearn: 0.4698847\ttotal: 3.78s\tremaining: 15.4s\n",
      "59:\tlearn: 0.4698081\ttotal: 3.85s\tremaining: 15.4s\n",
      "60:\tlearn: 0.4697533\ttotal: 3.91s\tremaining: 15.3s\n",
      "61:\tlearn: 0.4697077\ttotal: 3.98s\tremaining: 15.3s\n",
      "62:\tlearn: 0.4695069\ttotal: 4.05s\tremaining: 15.2s\n",
      "63:\tlearn: 0.4690326\ttotal: 4.12s\tremaining: 15.2s\n",
      "64:\tlearn: 0.4688541\ttotal: 4.19s\tremaining: 15.1s\n",
      "65:\tlearn: 0.4687481\ttotal: 4.25s\tremaining: 15.1s\n",
      "66:\tlearn: 0.4686502\ttotal: 4.3s\tremaining: 15s\n",
      "67:\tlearn: 0.4684290\ttotal: 4.37s\tremaining: 14.9s\n",
      "68:\tlearn: 0.4682713\ttotal: 4.43s\tremaining: 14.8s\n",
      "69:\tlearn: 0.4681667\ttotal: 4.5s\tremaining: 14.8s\n",
      "70:\tlearn: 0.4681011\ttotal: 4.57s\tremaining: 14.7s\n",
      "71:\tlearn: 0.4679160\ttotal: 4.63s\tremaining: 14.7s\n",
      "72:\tlearn: 0.4678562\ttotal: 4.68s\tremaining: 14.6s\n",
      "73:\tlearn: 0.4677978\ttotal: 4.74s\tremaining: 14.5s\n",
      "74:\tlearn: 0.4677553\ttotal: 4.8s\tremaining: 14.4s\n",
      "75:\tlearn: 0.4677008\ttotal: 4.86s\tremaining: 14.3s\n",
      "76:\tlearn: 0.4676319\ttotal: 4.92s\tremaining: 14.3s\n",
      "77:\tlearn: 0.4675539\ttotal: 4.99s\tremaining: 14.2s\n",
      "78:\tlearn: 0.4674965\ttotal: 5.05s\tremaining: 14.1s\n",
      "79:\tlearn: 0.4674396\ttotal: 5.12s\tremaining: 14.1s\n",
      "80:\tlearn: 0.4673907\ttotal: 5.17s\tremaining: 14s\n",
      "81:\tlearn: 0.4673462\ttotal: 5.24s\tremaining: 13.9s\n",
      "82:\tlearn: 0.4672953\ttotal: 5.3s\tremaining: 13.9s\n",
      "83:\tlearn: 0.4672294\ttotal: 5.36s\tremaining: 13.8s\n",
      "84:\tlearn: 0.4671714\ttotal: 5.42s\tremaining: 13.7s\n",
      "85:\tlearn: 0.4671188\ttotal: 5.49s\tremaining: 13.6s\n",
      "86:\tlearn: 0.4670413\ttotal: 5.55s\tremaining: 13.6s\n",
      "87:\tlearn: 0.4669962\ttotal: 5.62s\tremaining: 13.5s\n",
      "88:\tlearn: 0.4669210\ttotal: 5.67s\tremaining: 13.5s\n",
      "89:\tlearn: 0.4668601\ttotal: 5.74s\tremaining: 13.4s\n",
      "90:\tlearn: 0.4668149\ttotal: 5.81s\tremaining: 13.3s\n",
      "91:\tlearn: 0.4666079\ttotal: 5.88s\tremaining: 13.3s\n",
      "92:\tlearn: 0.4665651\ttotal: 5.94s\tremaining: 13.2s\n",
      "93:\tlearn: 0.4663758\ttotal: 6.01s\tremaining: 13.2s\n",
      "94:\tlearn: 0.4663384\ttotal: 6.07s\tremaining: 13.1s\n",
      "95:\tlearn: 0.4663099\ttotal: 6.13s\tremaining: 13s\n",
      "96:\tlearn: 0.4659700\ttotal: 6.2s\tremaining: 13s\n",
      "97:\tlearn: 0.4659125\ttotal: 6.26s\tremaining: 12.9s\n",
      "98:\tlearn: 0.4658701\ttotal: 6.33s\tremaining: 12.8s\n",
      "99:\tlearn: 0.4658309\ttotal: 6.39s\tremaining: 12.8s\n",
      "100:\tlearn: 0.4657977\ttotal: 6.46s\tremaining: 12.7s\n",
      "101:\tlearn: 0.4656179\ttotal: 6.53s\tremaining: 12.7s\n",
      "102:\tlearn: 0.4655848\ttotal: 6.59s\tremaining: 12.6s\n",
      "103:\tlearn: 0.4655569\ttotal: 6.65s\tremaining: 12.5s\n",
      "104:\tlearn: 0.4655215\ttotal: 6.71s\tremaining: 12.5s\n",
      "105:\tlearn: 0.4654746\ttotal: 6.78s\tremaining: 12.4s\n",
      "106:\tlearn: 0.4654239\ttotal: 6.84s\tremaining: 12.3s\n",
      "107:\tlearn: 0.4653812\ttotal: 6.91s\tremaining: 12.3s\n",
      "108:\tlearn: 0.4653409\ttotal: 6.97s\tremaining: 12.2s\n",
      "109:\tlearn: 0.4652740\ttotal: 7.04s\tremaining: 12.2s\n",
      "110:\tlearn: 0.4652196\ttotal: 7.1s\tremaining: 12.1s\n",
      "111:\tlearn: 0.4651783\ttotal: 7.16s\tremaining: 12s\n",
      "112:\tlearn: 0.4651121\ttotal: 7.22s\tremaining: 11.9s\n",
      "113:\tlearn: 0.4650451\ttotal: 7.29s\tremaining: 11.9s\n",
      "114:\tlearn: 0.4650192\ttotal: 7.35s\tremaining: 11.8s\n",
      "115:\tlearn: 0.4648277\ttotal: 7.42s\tremaining: 11.8s\n",
      "116:\tlearn: 0.4647727\ttotal: 7.49s\tremaining: 11.7s\n",
      "117:\tlearn: 0.4644261\ttotal: 7.56s\tremaining: 11.7s\n",
      "118:\tlearn: 0.4643861\ttotal: 7.61s\tremaining: 11.6s\n",
      "119:\tlearn: 0.4641925\ttotal: 7.68s\tremaining: 11.5s\n",
      "120:\tlearn: 0.4641304\ttotal: 7.74s\tremaining: 11.5s\n",
      "121:\tlearn: 0.4640933\ttotal: 7.81s\tremaining: 11.4s\n",
      "122:\tlearn: 0.4640568\ttotal: 7.87s\tremaining: 11.3s\n",
      "123:\tlearn: 0.4638598\ttotal: 7.94s\tremaining: 11.3s\n",
      "124:\tlearn: 0.4638265\ttotal: 7.99s\tremaining: 11.2s\n",
      "125:\tlearn: 0.4637661\ttotal: 8.06s\tremaining: 11.1s\n",
      "126:\tlearn: 0.4637295\ttotal: 8.13s\tremaining: 11.1s\n",
      "127:\tlearn: 0.4635447\ttotal: 8.2s\tremaining: 11s\n",
      "128:\tlearn: 0.4635033\ttotal: 8.27s\tremaining: 11s\n",
      "129:\tlearn: 0.4634723\ttotal: 8.35s\tremaining: 10.9s\n",
      "130:\tlearn: 0.4634205\ttotal: 8.41s\tremaining: 10.8s\n",
      "131:\tlearn: 0.4633672\ttotal: 8.46s\tremaining: 10.8s\n",
      "132:\tlearn: 0.4633245\ttotal: 8.52s\tremaining: 10.7s\n",
      "133:\tlearn: 0.4632781\ttotal: 8.59s\tremaining: 10.6s\n",
      "134:\tlearn: 0.4632231\ttotal: 8.66s\tremaining: 10.6s\n",
      "135:\tlearn: 0.4631819\ttotal: 8.71s\tremaining: 10.5s\n",
      "136:\tlearn: 0.4631271\ttotal: 8.77s\tremaining: 10.4s\n",
      "137:\tlearn: 0.4630781\ttotal: 8.84s\tremaining: 10.4s\n",
      "138:\tlearn: 0.4630411\ttotal: 8.9s\tremaining: 10.3s\n",
      "139:\tlearn: 0.4630017\ttotal: 8.97s\tremaining: 10.3s\n",
      "140:\tlearn: 0.4629812\ttotal: 9.02s\tremaining: 10.2s\n",
      "141:\tlearn: 0.4629487\ttotal: 9.08s\tremaining: 10.1s\n",
      "142:\tlearn: 0.4629145\ttotal: 9.15s\tremaining: 10s\n",
      "143:\tlearn: 0.4628763\ttotal: 9.2s\tremaining: 9.97s\n",
      "144:\tlearn: 0.4628316\ttotal: 9.26s\tremaining: 9.9s\n",
      "145:\tlearn: 0.4627767\ttotal: 9.33s\tremaining: 9.84s\n",
      "146:\tlearn: 0.4627469\ttotal: 9.39s\tremaining: 9.77s\n",
      "147:\tlearn: 0.4627052\ttotal: 9.45s\tremaining: 9.71s\n",
      "148:\tlearn: 0.4626677\ttotal: 9.52s\tremaining: 9.64s\n",
      "149:\tlearn: 0.4626375\ttotal: 9.58s\tremaining: 9.58s\n",
      "150:\tlearn: 0.4626063\ttotal: 9.64s\tremaining: 9.52s\n",
      "151:\tlearn: 0.4625661\ttotal: 9.71s\tremaining: 9.45s\n",
      "152:\tlearn: 0.4625416\ttotal: 9.77s\tremaining: 9.38s\n",
      "153:\tlearn: 0.4625042\ttotal: 9.84s\tremaining: 9.32s\n",
      "154:\tlearn: 0.4624724\ttotal: 9.9s\tremaining: 9.26s\n",
      "155:\tlearn: 0.4624350\ttotal: 9.96s\tremaining: 9.2s\n",
      "156:\tlearn: 0.4623682\ttotal: 10s\tremaining: 9.14s\n",
      "157:\tlearn: 0.4622919\ttotal: 10.1s\tremaining: 9.07s\n",
      "158:\tlearn: 0.4622598\ttotal: 10.2s\tremaining: 9.01s\n",
      "159:\tlearn: 0.4622230\ttotal: 10.2s\tremaining: 8.94s\n",
      "160:\tlearn: 0.4621868\ttotal: 10.3s\tremaining: 8.88s\n",
      "161:\tlearn: 0.4621221\ttotal: 10.4s\tremaining: 8.82s\n",
      "162:\tlearn: 0.4620875\ttotal: 10.4s\tremaining: 8.75s\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "163:\tlearn: 0.4620421\ttotal: 10.5s\tremaining: 8.69s\n",
      "164:\tlearn: 0.4620087\ttotal: 10.5s\tremaining: 8.63s\n",
      "165:\tlearn: 0.4619490\ttotal: 10.6s\tremaining: 8.57s\n",
      "166:\tlearn: 0.4619147\ttotal: 10.7s\tremaining: 8.5s\n",
      "167:\tlearn: 0.4618841\ttotal: 10.7s\tremaining: 8.44s\n",
      "168:\tlearn: 0.4618534\ttotal: 10.8s\tremaining: 8.38s\n",
      "169:\tlearn: 0.4618188\ttotal: 10.9s\tremaining: 8.32s\n",
      "170:\tlearn: 0.4617854\ttotal: 10.9s\tremaining: 8.26s\n",
      "171:\tlearn: 0.4617371\ttotal: 11s\tremaining: 8.2s\n",
      "172:\tlearn: 0.4616945\ttotal: 11.1s\tremaining: 8.13s\n",
      "173:\tlearn: 0.4616575\ttotal: 11.1s\tremaining: 8.07s\n",
      "174:\tlearn: 0.4616223\ttotal: 11.2s\tremaining: 8.01s\n",
      "175:\tlearn: 0.4615916\ttotal: 11.3s\tremaining: 7.95s\n",
      "176:\tlearn: 0.4615314\ttotal: 11.3s\tremaining: 7.88s\n",
      "177:\tlearn: 0.4614886\ttotal: 11.4s\tremaining: 7.82s\n",
      "178:\tlearn: 0.4614612\ttotal: 11.5s\tremaining: 7.74s\n",
      "179:\tlearn: 0.4614412\ttotal: 11.5s\tremaining: 7.67s\n",
      "180:\tlearn: 0.4614129\ttotal: 11.6s\tremaining: 7.61s\n",
      "181:\tlearn: 0.4613727\ttotal: 11.6s\tremaining: 7.55s\n",
      "182:\tlearn: 0.4613473\ttotal: 11.7s\tremaining: 7.49s\n",
      "183:\tlearn: 0.4613271\ttotal: 11.8s\tremaining: 7.42s\n",
      "184:\tlearn: 0.4612971\ttotal: 11.8s\tremaining: 7.36s\n",
      "185:\tlearn: 0.4612698\ttotal: 11.9s\tremaining: 7.3s\n",
      "186:\tlearn: 0.4612422\ttotal: 12s\tremaining: 7.23s\n",
      "187:\tlearn: 0.4612164\ttotal: 12s\tremaining: 7.16s\n",
      "188:\tlearn: 0.4611842\ttotal: 12.1s\tremaining: 7.1s\n",
      "189:\tlearn: 0.4611522\ttotal: 12.1s\tremaining: 7.03s\n",
      "190:\tlearn: 0.4611047\ttotal: 12.2s\tremaining: 6.97s\n",
      "191:\tlearn: 0.4610874\ttotal: 12.3s\tremaining: 6.9s\n",
      "192:\tlearn: 0.4610587\ttotal: 12.3s\tremaining: 6.83s\n",
      "193:\tlearn: 0.4610234\ttotal: 12.4s\tremaining: 6.76s\n",
      "194:\tlearn: 0.4609909\ttotal: 12.4s\tremaining: 6.7s\n",
      "195:\tlearn: 0.4609510\ttotal: 12.5s\tremaining: 6.63s\n",
      "196:\tlearn: 0.4609228\ttotal: 12.6s\tremaining: 6.57s\n",
      "197:\tlearn: 0.4608795\ttotal: 12.6s\tremaining: 6.5s\n",
      "198:\tlearn: 0.4608496\ttotal: 12.7s\tremaining: 6.44s\n",
      "199:\tlearn: 0.4608217\ttotal: 12.8s\tremaining: 6.38s\n",
      "200:\tlearn: 0.4607827\ttotal: 12.8s\tremaining: 6.31s\n",
      "201:\tlearn: 0.4607594\ttotal: 12.9s\tremaining: 6.25s\n",
      "202:\tlearn: 0.4607156\ttotal: 12.9s\tremaining: 6.18s\n",
      "203:\tlearn: 0.4606822\ttotal: 13s\tremaining: 6.12s\n",
      "204:\tlearn: 0.4606490\ttotal: 13.1s\tremaining: 6.06s\n",
      "205:\tlearn: 0.4606219\ttotal: 13.1s\tremaining: 5.99s\n",
      "206:\tlearn: 0.4605966\ttotal: 13.2s\tremaining: 5.92s\n",
      "207:\tlearn: 0.4605534\ttotal: 13.2s\tremaining: 5.86s\n",
      "208:\tlearn: 0.4605191\ttotal: 13.3s\tremaining: 5.79s\n",
      "209:\tlearn: 0.4604784\ttotal: 13.4s\tremaining: 5.73s\n",
      "210:\tlearn: 0.4604424\ttotal: 13.4s\tremaining: 5.67s\n",
      "211:\tlearn: 0.4604170\ttotal: 13.5s\tremaining: 5.6s\n",
      "212:\tlearn: 0.4603829\ttotal: 13.6s\tremaining: 5.54s\n",
      "213:\tlearn: 0.4603541\ttotal: 13.6s\tremaining: 5.47s\n",
      "214:\tlearn: 0.4603263\ttotal: 13.7s\tremaining: 5.41s\n",
      "215:\tlearn: 0.4603078\ttotal: 13.7s\tremaining: 5.34s\n",
      "216:\tlearn: 0.4602823\ttotal: 13.8s\tremaining: 5.28s\n",
      "217:\tlearn: 0.4602520\ttotal: 13.9s\tremaining: 5.21s\n",
      "218:\tlearn: 0.4602186\ttotal: 13.9s\tremaining: 5.15s\n",
      "219:\tlearn: 0.4601636\ttotal: 14s\tremaining: 5.08s\n",
      "220:\tlearn: 0.4601303\ttotal: 14s\tremaining: 5.02s\n",
      "221:\tlearn: 0.4600941\ttotal: 14.1s\tremaining: 4.95s\n",
      "222:\tlearn: 0.4600551\ttotal: 14.2s\tremaining: 4.89s\n",
      "223:\tlearn: 0.4600362\ttotal: 14.2s\tremaining: 4.83s\n",
      "224:\tlearn: 0.4600125\ttotal: 14.3s\tremaining: 4.77s\n",
      "225:\tlearn: 0.4599940\ttotal: 14.4s\tremaining: 4.7s\n",
      "226:\tlearn: 0.4599673\ttotal: 14.4s\tremaining: 4.64s\n",
      "227:\tlearn: 0.4599275\ttotal: 14.5s\tremaining: 4.58s\n",
      "228:\tlearn: 0.4598869\ttotal: 14.6s\tremaining: 4.51s\n",
      "229:\tlearn: 0.4598651\ttotal: 14.6s\tremaining: 4.45s\n",
      "230:\tlearn: 0.4598447\ttotal: 14.7s\tremaining: 4.39s\n",
      "231:\tlearn: 0.4598142\ttotal: 14.8s\tremaining: 4.32s\n",
      "232:\tlearn: 0.4597877\ttotal: 14.8s\tremaining: 4.26s\n",
      "233:\tlearn: 0.4597527\ttotal: 14.9s\tremaining: 4.19s\n",
      "234:\tlearn: 0.4597209\ttotal: 14.9s\tremaining: 4.13s\n",
      "235:\tlearn: 0.4596912\ttotal: 15s\tremaining: 4.07s\n",
      "236:\tlearn: 0.4596619\ttotal: 15.1s\tremaining: 4.01s\n",
      "237:\tlearn: 0.4596351\ttotal: 15.1s\tremaining: 3.94s\n",
      "238:\tlearn: 0.4596035\ttotal: 15.2s\tremaining: 3.88s\n",
      "239:\tlearn: 0.4595809\ttotal: 15.3s\tremaining: 3.82s\n",
      "240:\tlearn: 0.4595462\ttotal: 15.3s\tremaining: 3.75s\n",
      "241:\tlearn: 0.4595245\ttotal: 15.4s\tremaining: 3.69s\n",
      "242:\tlearn: 0.4594935\ttotal: 15.5s\tremaining: 3.63s\n",
      "243:\tlearn: 0.4594739\ttotal: 15.5s\tremaining: 3.56s\n",
      "244:\tlearn: 0.4594480\ttotal: 15.6s\tremaining: 3.5s\n",
      "245:\tlearn: 0.4594134\ttotal: 15.7s\tremaining: 3.44s\n",
      "246:\tlearn: 0.4593923\ttotal: 15.7s\tremaining: 3.37s\n",
      "247:\tlearn: 0.4593764\ttotal: 15.8s\tremaining: 3.31s\n",
      "248:\tlearn: 0.4593212\ttotal: 15.8s\tremaining: 3.25s\n",
      "249:\tlearn: 0.4592962\ttotal: 15.9s\tremaining: 3.18s\n",
      "250:\tlearn: 0.4592664\ttotal: 16s\tremaining: 3.12s\n",
      "251:\tlearn: 0.4592354\ttotal: 16s\tremaining: 3.05s\n",
      "252:\tlearn: 0.4592047\ttotal: 16.1s\tremaining: 2.99s\n",
      "253:\tlearn: 0.4591755\ttotal: 16.2s\tremaining: 2.92s\n",
      "254:\tlearn: 0.4591459\ttotal: 16.2s\tremaining: 2.86s\n",
      "255:\tlearn: 0.4590915\ttotal: 16.3s\tremaining: 2.8s\n",
      "256:\tlearn: 0.4590677\ttotal: 16.3s\tremaining: 2.73s\n",
      "257:\tlearn: 0.4590389\ttotal: 16.4s\tremaining: 2.67s\n",
      "258:\tlearn: 0.4590181\ttotal: 16.5s\tremaining: 2.61s\n",
      "259:\tlearn: 0.4589880\ttotal: 16.5s\tremaining: 2.54s\n",
      "260:\tlearn: 0.4589650\ttotal: 16.6s\tremaining: 2.48s\n",
      "261:\tlearn: 0.4589467\ttotal: 16.7s\tremaining: 2.42s\n",
      "262:\tlearn: 0.4589036\ttotal: 16.7s\tremaining: 2.35s\n",
      "263:\tlearn: 0.4588698\ttotal: 16.8s\tremaining: 2.29s\n",
      "264:\tlearn: 0.4588484\ttotal: 16.9s\tremaining: 2.23s\n",
      "265:\tlearn: 0.4588199\ttotal: 16.9s\tremaining: 2.16s\n",
      "266:\tlearn: 0.4587990\ttotal: 17s\tremaining: 2.1s\n",
      "267:\tlearn: 0.4587547\ttotal: 17s\tremaining: 2.04s\n",
      "268:\tlearn: 0.4587218\ttotal: 17.1s\tremaining: 1.97s\n",
      "269:\tlearn: 0.4586542\ttotal: 17.2s\tremaining: 1.91s\n",
      "270:\tlearn: 0.4586342\ttotal: 17.2s\tremaining: 1.84s\n",
      "271:\tlearn: 0.4586004\ttotal: 17.3s\tremaining: 1.78s\n",
      "272:\tlearn: 0.4585766\ttotal: 17.4s\tremaining: 1.72s\n",
      "273:\tlearn: 0.4585415\ttotal: 17.4s\tremaining: 1.65s\n",
      "274:\tlearn: 0.4585181\ttotal: 17.5s\tremaining: 1.59s\n",
      "275:\tlearn: 0.4584855\ttotal: 17.6s\tremaining: 1.53s\n",
      "276:\tlearn: 0.4584580\ttotal: 17.6s\tremaining: 1.46s\n",
      "277:\tlearn: 0.4584323\ttotal: 17.7s\tremaining: 1.4s\n",
      "278:\tlearn: 0.4583971\ttotal: 17.7s\tremaining: 1.33s\n",
      "279:\tlearn: 0.4583803\ttotal: 17.8s\tremaining: 1.27s\n",
      "280:\tlearn: 0.4583539\ttotal: 17.9s\tremaining: 1.21s\n",
      "281:\tlearn: 0.4583234\ttotal: 17.9s\tremaining: 1.14s\n",
      "282:\tlearn: 0.4582931\ttotal: 18s\tremaining: 1.08s\n",
      "283:\tlearn: 0.4582654\ttotal: 18.1s\tremaining: 1.02s\n",
      "284:\tlearn: 0.4582438\ttotal: 18.1s\tremaining: 953ms\n",
      "285:\tlearn: 0.4582205\ttotal: 18.2s\tremaining: 890ms\n",
      "286:\tlearn: 0.4581965\ttotal: 18.2s\tremaining: 826ms\n",
      "287:\tlearn: 0.4581714\ttotal: 18.3s\tremaining: 763ms\n",
      "288:\tlearn: 0.4581469\ttotal: 18.4s\tremaining: 699ms\n",
      "289:\tlearn: 0.4581234\ttotal: 18.4s\tremaining: 636ms\n",
      "290:\tlearn: 0.4580467\ttotal: 18.5s\tremaining: 572ms\n",
      "291:\tlearn: 0.4580150\ttotal: 18.6s\tremaining: 509ms\n",
      "292:\tlearn: 0.4579802\ttotal: 18.6s\tremaining: 445ms\n",
      "293:\tlearn: 0.4579473\ttotal: 18.7s\tremaining: 382ms\n",
      "294:\tlearn: 0.4579215\ttotal: 18.8s\tremaining: 318ms\n",
      "295:\tlearn: 0.4578969\ttotal: 18.8s\tremaining: 254ms\n",
      "296:\tlearn: 0.4578709\ttotal: 18.9s\tremaining: 191ms\n",
      "297:\tlearn: 0.4578509\ttotal: 18.9s\tremaining: 127ms\n",
      "298:\tlearn: 0.4578269\ttotal: 19s\tremaining: 63.5ms\n",
      "299:\tlearn: 0.4578022\ttotal: 19.1s\tremaining: 0us\n"
     ]
    }
   ],
   "source": [
    "from catboost import CatBoostClassifier\n",
    "\n",
    "cb = CatBoostClassifier(n_estimators=300).fit(x_train_over, y_train_over)\n",
    "predict5= cb.predict(x_test_values)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 142,
   "id": "15a40e3f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "accuracy_score : 0.6971424010217113\n",
      "f1_score : 0.7775236889013979\n",
      "precision :  0.9239720443444148\n",
      "recall : 0.6711476654435025\n"
     ]
    }
   ],
   "source": [
    "print('accuracy_score :', accuracy_score(y_test_values ,predict5))\n",
    "print('f1_score :', f1_score(y_test_values, predict5))\n",
    "print('precision : ', precision_score(y_test_values, predict5))\n",
    "print('recall :', recall_score(y_test_values, predict5))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 148,
   "id": "176ca4b0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 42074,  10911],\n",
       "       [ 64973, 132602]], dtype=int64)"
      ]
     },
     "execution_count": 148,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "confusion_matrix(y_test, predict5)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 143,
   "id": "aa074332",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "    <style>\n",
       "    table.eli5-weights tr:hover {\n",
       "        filter: brightness(85%);\n",
       "    }\n",
       "</style>\n",
       "\n",
       "\n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "        <table class=\"eli5-weights eli5-feature-importances\" style=\"border-collapse: collapse; border: none; margin-top: 0em; table-layout: auto;\">\n",
       "    <thead>\n",
       "    <tr style=\"border: none;\">\n",
       "        <th style=\"padding: 0 1em 0 0.5em; text-align: right; border: none;\">Weight</th>\n",
       "        <th style=\"padding: 0 0.5em 0 0.5em; text-align: left; border: none;\">Feature</th>\n",
       "    </tr>\n",
       "    </thead>\n",
       "    <tbody>\n",
       "    \n",
       "        <tr style=\"background-color: hsl(120, 100.00%, 80.00%); border: none;\">\n",
       "            <td style=\"padding: 0 1em 0 0.5em; text-align: right; border: none;\">\n",
       "                0.0699\n",
       "                \n",
       "                    &plusmn; 0.0013\n",
       "                \n",
       "            </td>\n",
       "            <td style=\"padding: 0 0.5em 0 0.5em; text-align: left; border: none;\">\n",
       "                MELT_TEMP\n",
       "            </td>\n",
       "        </tr>\n",
       "    \n",
       "        <tr style=\"background-color: hsl(120, 100.00%, 94.76%); border: none;\">\n",
       "            <td style=\"padding: 0 1em 0 0.5em; text-align: right; border: none;\">\n",
       "                0.0103\n",
       "                \n",
       "                    &plusmn; 0.0005\n",
       "                \n",
       "            </td>\n",
       "            <td style=\"padding: 0 0.5em 0 0.5em; text-align: left; border: none;\">\n",
       "                MELT_WEIGHT\n",
       "            </td>\n",
       "        </tr>\n",
       "    \n",
       "        <tr style=\"background-color: hsl(0, 100.00%, 96.03%); border: none;\">\n",
       "            <td style=\"padding: 0 1em 0 0.5em; text-align: right; border: none;\">\n",
       "                -0.0069\n",
       "                \n",
       "                    &plusmn; 0.0003\n",
       "                \n",
       "            </td>\n",
       "            <td style=\"padding: 0 0.5em 0 0.5em; text-align: left; border: none;\">\n",
       "                INSP\n",
       "            </td>\n",
       "        </tr>\n",
       "    \n",
       "        <tr style=\"background-color: hsl(0, 100.00%, 94.07%); border: none;\">\n",
       "            <td style=\"padding: 0 1em 0 0.5em; text-align: right; border: none;\">\n",
       "                -0.0123\n",
       "                \n",
       "                    &plusmn; 0.0013\n",
       "                \n",
       "            </td>\n",
       "            <td style=\"padding: 0 0.5em 0 0.5em; text-align: left; border: none;\">\n",
       "                MOTORSPEED\n",
       "            </td>\n",
       "        </tr>\n",
       "    \n",
       "    \n",
       "    </tbody>\n",
       "</table>\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "execution_count": 143,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "perm = PermutationImportance(cb, scoring = \"accuracy\").fit(x_test_values, y_test_values)\n",
    "eli5.show_weights(perm, top = 4, feature_names = train_set_feature.columns.tolist())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3db0689b",
   "metadata": {},
   "source": [
    "# LightGBM"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 144,
   "id": "225c62b3",
   "metadata": {},
   "outputs": [],
   "source": [
    "lgbm = LGBMClassifier(n_estimators=1000, max_depth=15, objective='binary', num_leaves = 30).fit(x_train_over, y_train_over)\n",
    "predict6= lgbm.predict(x_test_values)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 145,
   "id": "1bb89e01",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "accuracy_score : 0.7065253831417625\n",
      "f1_score : 0.7886527268807934\n",
      "precision :  0.9125108081143998\n",
      "recall : 0.694399595090472\n"
     ]
    }
   ],
   "source": [
    "print('accuracy_score :', accuracy_score(y_test_values ,predict6))\n",
    "print('f1_score :', f1_score(y_test_values, predict6))\n",
    "print('precision : ', precision_score(y_test_values, predict6))\n",
    "print('recall :', recall_score(y_test_values, predict6))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 150,
   "id": "0682fcb7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[ 39831,  13154],\n",
       "       [ 60379, 137196]], dtype=int64)"
      ]
     },
     "execution_count": 150,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "confusion_matrix(y_test, predict6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 146,
   "id": "da77adbd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "\n",
       "    <style>\n",
       "    table.eli5-weights tr:hover {\n",
       "        filter: brightness(85%);\n",
       "    }\n",
       "</style>\n",
       "\n",
       "\n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "        <table class=\"eli5-weights eli5-feature-importances\" style=\"border-collapse: collapse; border: none; margin-top: 0em; table-layout: auto;\">\n",
       "    <thead>\n",
       "    <tr style=\"border: none;\">\n",
       "        <th style=\"padding: 0 1em 0 0.5em; text-align: right; border: none;\">Weight</th>\n",
       "        <th style=\"padding: 0 0.5em 0 0.5em; text-align: left; border: none;\">Feature</th>\n",
       "    </tr>\n",
       "    </thead>\n",
       "    <tbody>\n",
       "    \n",
       "        <tr style=\"background-color: hsl(120, 100.00%, 80.00%); border: none;\">\n",
       "            <td style=\"padding: 0 1em 0 0.5em; text-align: right; border: none;\">\n",
       "                0.0641\n",
       "                \n",
       "                    &plusmn; 0.0012\n",
       "                \n",
       "            </td>\n",
       "            <td style=\"padding: 0 0.5em 0 0.5em; text-align: left; border: none;\">\n",
       "                MELT_TEMP\n",
       "            </td>\n",
       "        </tr>\n",
       "    \n",
       "        <tr style=\"background-color: hsl(120, 100.00%, 93.55%); border: none;\">\n",
       "            <td style=\"padding: 0 1em 0 0.5em; text-align: right; border: none;\">\n",
       "                0.0127\n",
       "                \n",
       "                    &plusmn; 0.0005\n",
       "                \n",
       "            </td>\n",
       "            <td style=\"padding: 0 0.5em 0 0.5em; text-align: left; border: none;\">\n",
       "                MELT_WEIGHT\n",
       "            </td>\n",
       "        </tr>\n",
       "    \n",
       "        <tr style=\"background-color: hsl(120, 100.00%, 99.09%); border: none;\">\n",
       "            <td style=\"padding: 0 1em 0 0.5em; text-align: right; border: none;\">\n",
       "                0.0008\n",
       "                \n",
       "                    &plusmn; 0.0005\n",
       "                \n",
       "            </td>\n",
       "            <td style=\"padding: 0 0.5em 0 0.5em; text-align: left; border: none;\">\n",
       "                INSP\n",
       "            </td>\n",
       "        </tr>\n",
       "    \n",
       "        <tr style=\"background-color: hsl(0, 100.00%, 92.67%); border: none;\">\n",
       "            <td style=\"padding: 0 1em 0 0.5em; text-align: right; border: none;\">\n",
       "                -0.0153\n",
       "                \n",
       "                    &plusmn; 0.0009\n",
       "                \n",
       "            </td>\n",
       "            <td style=\"padding: 0 0.5em 0 0.5em; text-align: left; border: none;\">\n",
       "                MOTORSPEED\n",
       "            </td>\n",
       "        </tr>\n",
       "    \n",
       "    \n",
       "    </tbody>\n",
       "</table>\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "    \n",
       "\n",
       "\n",
       "\n"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "execution_count": 146,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "perm = PermutationImportance(lgbm, scoring = \"accuracy\").fit(x_test_values, y_test_values)\n",
    "eli5.show_weights(perm, top = 4, feature_names = train_set_feature.columns.tolist())"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
